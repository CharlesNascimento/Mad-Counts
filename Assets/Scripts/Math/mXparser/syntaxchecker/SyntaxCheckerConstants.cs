/* Generated By: CSCC: 4.0 (03/25/2012)  Do not edit this line. SyntaxCheckerConstants.cs */
namespace org.mariuszgromada.math.mxparser.syntaxchecker{


using System;
public class SyntaxCheckerConstants {

  public const int EOF = 0;
  public const int LETTER = 5;
  public const int DIGIT = 6;
  public const int DIGIT_B1 = 7;
  public const int DIGIT_B2 = 8;
  public const int DIGIT_B3 = 9;
  public const int DIGIT_B4 = 10;
  public const int DIGIT_B5 = 11;
  public const int DIGIT_B6 = 12;
  public const int DIGIT_B7 = 13;
  public const int DIGIT_B8 = 14;
  public const int DIGIT_B9 = 15;
  public const int DIGIT_B10 = 16;
  public const int DIGIT_B11 = 17;
  public const int DIGIT_B12 = 18;
  public const int DIGIT_B13 = 19;
  public const int DIGIT_B14 = 20;
  public const int DIGIT_B15 = 21;
  public const int DIGIT_B16 = 22;
  public const int DIGIT_B17 = 23;
  public const int DIGIT_B18 = 24;
  public const int DIGIT_B19 = 25;
  public const int DIGIT_B20 = 26;
  public const int DIGIT_B21 = 27;
  public const int DIGIT_B22 = 28;
  public const int DIGIT_B23 = 29;
  public const int DIGIT_B24 = 30;
  public const int DIGIT_B25 = 31;
  public const int DIGIT_B26 = 32;
  public const int DIGIT_B27 = 33;
  public const int DIGIT_B28 = 34;
  public const int DIGIT_B29 = 35;
  public const int DIGIT_B30 = 36;
  public const int DIGIT_B31 = 37;
  public const int DIGIT_B32 = 38;
  public const int DIGIT_B33 = 39;
  public const int DIGIT_B34 = 40;
  public const int DIGIT_B35 = 41;
  public const int DIGIT_B36 = 42;
  public const int LETTERS = 43;
  public const int INTEGER = 44;
  public const int LEFT_PAR = 45;
  public const int RIGHT_PAR = 46;
  public const int PLUS = 47;
  public const int MINUS = 48;
  public const int MULTIPLY = 49;
  public const int DIV = 50;
  public const int POWER = 51;
  public const int MODULO = 52;
  public const int FACTORIAL = 53;
  public const int PERCENTAGE = 54;
  public const int COMMA = 55;
  public const int SEMICOLON = 56;
  public const int EQ = 57;
  public const int UNIT = 58;
  public const int NEQ = 59;
  public const int LT = 60;
  public const int LEQ = 61;
  public const int GT = 62;
  public const int GEQ = 63;
  public const int OR = 64;
  public const int AND = 65;
  public const int NOT = 66;
  public const int BITNOT = 67;
  public const int IMP = 68;
  public const int CIMP = 69;
  public const int NIMP = 70;
  public const int CNIMP = 71;
  public const int NAND = 72;
  public const int EQV = 73;
  public const int NOR = 74;
  public const int BITWISE = 75;
  public const int XOR = 76;
  public const int CHAR = 77;
  public const int DEC_FRACT = 78;
  public const int DEC_FRACT_OR_INT = 79;
  public const int DECIMAL = 80;
  public const int BASE1 = 81;
  public const int BASE2 = 82;
  public const int BASE3 = 83;
  public const int BASE4 = 84;
  public const int BASE5 = 85;
  public const int BASE6 = 86;
  public const int BASE7 = 87;
  public const int BASE8 = 88;
  public const int BASE9 = 89;
  public const int BASE10 = 90;
  public const int BASE11 = 91;
  public const int BASE12 = 92;
  public const int BASE13 = 93;
  public const int BASE14 = 94;
  public const int BASE15 = 95;
  public const int BASE16 = 96;
  public const int BASE17 = 97;
  public const int BASE18 = 98;
  public const int BASE19 = 99;
  public const int BASE20 = 100;
  public const int BASE21 = 101;
  public const int BASE22 = 102;
  public const int BASE23 = 103;
  public const int BASE24 = 104;
  public const int BASE25 = 105;
  public const int BASE26 = 106;
  public const int BASE27 = 107;
  public const int BASE28 = 108;
  public const int BASE29 = 109;
  public const int BASE30 = 110;
  public const int BASE31 = 111;
  public const int BASE32 = 112;
  public const int BASE33 = 113;
  public const int BASE34 = 114;
  public const int BASE35 = 115;
  public const int BASE36 = 116;
  public const int BINARY = 117;
  public const int OCTAL = 118;
  public const int HEXADECIMAL = 119;
  public const int IDENTIFIER = 120;
  public const int FUNCTION = 121;
  public const int INVALID_TOKEN = 124;
  public const int UNEXPECTED_CHAR = 125;

  public const int DEFAULT = 0;

  public String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<LETTER>",
    "<DIGIT>",
    "\"1\"",
    "<DIGIT_B2>",
    "<DIGIT_B3>",
    "<DIGIT_B4>",
    "<DIGIT_B5>",
    "<DIGIT_B6>",
    "<DIGIT_B7>",
    "<DIGIT_B8>",
    "<DIGIT_B9>",
    "<DIGIT_B10>",
    "<DIGIT_B11>",
    "<DIGIT_B12>",
    "<DIGIT_B13>",
    "<DIGIT_B14>",
    "<DIGIT_B15>",
    "<DIGIT_B16>",
    "<DIGIT_B17>",
    "<DIGIT_B18>",
    "<DIGIT_B19>",
    "<DIGIT_B20>",
    "<DIGIT_B21>",
    "<DIGIT_B22>",
    "<DIGIT_B23>",
    "<DIGIT_B24>",
    "<DIGIT_B25>",
    "<DIGIT_B26>",
    "<DIGIT_B27>",
    "<DIGIT_B28>",
    "<DIGIT_B29>",
    "<DIGIT_B30>",
    "<DIGIT_B31>",
    "<DIGIT_B32>",
    "<DIGIT_B33>",
    "<DIGIT_B34>",
    "<DIGIT_B35>",
    "<DIGIT_B36>",
    "<LETTERS>",
    "<INTEGER>",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\"#\"",
    "\"!\"",
    "\"%\"",
    "\",\"",
    "\";\"",
    "<EQ>",
    "<UNIT>",
    "<NEQ>",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "<OR>",
    "<AND>",
    "\"~\"",
    "\"@~\"",
    "\"-->\"",
    "\"<--\"",
    "\"-/>\"",
    "\"</-\"",
    "<NAND>",
    "\"<->\"",
    "<NOR>",
    "<BITWISE>",
    "\"(+)\"",
    "<CHAR>",
    "<DEC_FRACT>",
    "<DEC_FRACT_OR_INT>",
    "<DECIMAL>",
    "<BASE1>",
    "<BASE2>",
    "<BASE3>",
    "<BASE4>",
    "<BASE5>",
    "<BASE6>",
    "<BASE7>",
    "<BASE8>",
    "<BASE9>",
    "<BASE10>",
    "<BASE11>",
    "<BASE12>",
    "<BASE13>",
    "<BASE14>",
    "<BASE15>",
    "<BASE16>",
    "<BASE17>",
    "<BASE18>",
    "<BASE19>",
    "<BASE20>",
    "<BASE21>",
    "<BASE22>",
    "<BASE23>",
    "<BASE24>",
    "<BASE25>",
    "<BASE26>",
    "<BASE27>",
    "<BASE28>",
    "<BASE29>",
    "<BASE30>",
    "<BASE31>",
    "<BASE32>",
    "<BASE33>",
    "<BASE34>",
    "<BASE35>",
    "<BASE36>",
    "<BINARY>",
    "<OCTAL>",
    "<HEXADECIMAL>",
    "<IDENTIFIER>",
    "<FUNCTION>",
    "\"[\"",
    "\"]\"",
    "<INVALID_TOKEN>",
    "<UNEXPECTED_CHAR>",
  };

}
}
